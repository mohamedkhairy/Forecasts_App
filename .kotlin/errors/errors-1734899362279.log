kotlin version: 2.0.21
error message: Incremental compilation failed: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.utils.core.UiState.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=Endpoints, scope=com.example.network.remoteBase), LookupSymbol(name=WeatherEntity, scope=com.example.database.entity), LookupSymbol(name=IoDispatcher, scope=com.example.utils.dispatchers), LookupSymbol(name=CachingHandlerKt, scope=com.example.utils.handler), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.core.UiState.Companion), LookupSymbol(name=FlowUseCase, scope=com.example.utils.usecases), LookupSymbol(name=Companion, scope=com.example.utils.core.UiState), LookupSymbol(name=MainEntity, scope=com.example.database.entity), LookupSymbol(name=success, scope=com.example.utils.core.UiState.Companion), LookupSymbol(name=WeatherDetailsEntity, scope=com.example.database.entity), LookupSymbol(name=WeatherIcons, scope=com.example.network.remoteBase), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.core.UiState), LookupSymbol(name=BaseMapper, scope=com.example.utils.mapper), LookupSymbol(name=cachingHandler, scope=com.example.utils.handler), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.handler), LookupSymbol(name=DatabaseManager, scope=com.example.database.dbManager), LookupSymbol(name=WeatherDao, scope=com.example.database.dbManager)], dirtyClassesFqNames=[com.example.utils.handler.CachingHandlerKt, com.example.database.entity.WeatherDetailsEntity, com.example.database.dbManager.WeatherDao, com.example.utils.dispatchers.IoDispatcher, com.example.utils.core.UiState, com.example.utils.handler, com.example.utils.mapper.BaseMapper, com.example.network.remoteBase.WeatherIcons, com.example.database.dbManager.DatabaseManager, com.example.utils.core.UiState.Companion, com.example.database.entity.WeatherEntity, com.example.network.remoteBase.Endpoints, com.example.utils.usecases.FlowUseCase, com.example.database.entity.MainEntity], dirtyClassesFqNamesForceRecompile=[])
java.lang.IllegalStateException: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.utils.core.UiState.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=Endpoints, scope=com.example.network.remoteBase), LookupSymbol(name=WeatherEntity, scope=com.example.database.entity), LookupSymbol(name=IoDispatcher, scope=com.example.utils.dispatchers), LookupSymbol(name=CachingHandlerKt, scope=com.example.utils.handler), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.core.UiState.Companion), LookupSymbol(name=FlowUseCase, scope=com.example.utils.usecases), LookupSymbol(name=Companion, scope=com.example.utils.core.UiState), LookupSymbol(name=MainEntity, scope=com.example.database.entity), LookupSymbol(name=success, scope=com.example.utils.core.UiState.Companion), LookupSymbol(name=WeatherDetailsEntity, scope=com.example.database.entity), LookupSymbol(name=WeatherIcons, scope=com.example.network.remoteBase), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.core.UiState), LookupSymbol(name=BaseMapper, scope=com.example.utils.mapper), LookupSymbol(name=cachingHandler, scope=com.example.utils.handler), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.utils.handler), LookupSymbol(name=DatabaseManager, scope=com.example.database.dbManager), LookupSymbol(name=WeatherDao, scope=com.example.database.dbManager)], dirtyClassesFqNames=[com.example.utils.handler.CachingHandlerKt, com.example.database.entity.WeatherDetailsEntity, com.example.database.dbManager.WeatherDao, com.example.utils.dispatchers.IoDispatcher, com.example.utils.core.UiState, com.example.utils.handler, com.example.utils.mapper.BaseMapper, com.example.network.remoteBase.WeatherIcons, com.example.database.dbManager.DatabaseManager, com.example.utils.core.UiState.Companion, com.example.database.entity.WeatherEntity, com.example.network.remoteBase.Endpoints, com.example.utils.usecases.FlowUseCase, com.example.database.entity.MainEntity], dirtyClassesFqNamesForceRecompile=[])
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.toProgramSymbols(ClasspathChangesComputer.kt:381)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeFineGrainedKotlinClassChanges(ClasspathChangesComputer.kt:281)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeKotlinClassChanges(ClasspathChangesComputer.kt:181)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClassChanges(ClasspathChangesComputer.kt:154)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeChangedAndImpactedSet(ClasspathChangesComputer.kt:104)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:72)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:205)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:143)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


